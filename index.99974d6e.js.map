{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAE9B,EAAU,UAsBhB,SAAS,EAAmB,CAAI,CAAE,CAAO,EACvC,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,SAAS,CAAC,GAAG,CAAC,GAC3B,EAAa,SAAS,CAAG,EACzB,EAAK,WAAW,CAAC,EACnB,CAfA,AAXqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,QAAS,SAAS,IAC1C,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,EACxC,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAGG,IAAI,CAAC,SAAC,CADT,EAEI,EAAmB,EAAS,EAC9B,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAlBU,QAkBgB,EAC5B,GAwBF,AAbsB,IAAI,QAAQ,SAAC,CAAnC,EACE,SAAS,gBAAgB,CAAC,QAAS,SAAS,IAC1C,EAAQ,+BACR,SAAS,mBAAmB,CAAC,QAAS,EACxC,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAS,EAAY,CAAC,EAC7D,EAAE,cAAc,GAChB,EAAQ,+BACR,SAAS,mBAAmB,CAAC,cAAe,EAC9C,EACF,GAEc,IAAI,CAAC,SAAC,CAApB,EACE,EAAmB,EAAS,EAC9B,GA0BA,AAxBqB,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAI,EAAiB,CAAA,EACjB,EAAkB,CAAA,EAEtB,SAAS,gBAAgB,CAAC,QAAS,SAAS,IAC1C,EAAiB,CAAA,EACjB,SAAS,mBAAmB,CAAC,QAAS,GAElC,GAAkB,GACpB,EAAQ,6BAEZ,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAS,EAAY,CAAC,EAC7D,EAAE,cAAc,GAChB,EAAkB,CAAA,EAClB,SAAS,mBAAmB,CAAC,QAAS,GAElC,GAAkB,GACpB,EAAQ,6BAEZ,EACF,GAEa,IAAI,CAAC,SAAC,CAAnB,EACE,EAAmB,EAAS,EAC9B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar body = document.querySelector(\"body\");\nvar success = \"success\";\nvar error = \"error\";\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function handleClick() {\n        resolve(\"First promise was resolved\");\n        document.removeEventListener(\"click\", handleClick);\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nfirstPromise.then(function(message) {\n    createNotification(success, message);\n}).catch(function(errorMsg) {\n    createNotification(error, errorMsg);\n});\nfunction createNotification(type, message) {\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.classList.add(type);\n    notification.innerText = message;\n    body.appendChild(notification);\n}\nvar secondPromise = new Promise(function(resolve) {\n    document.addEventListener(\"click\", function handleClick() {\n        resolve(\"Second promise was resolved\");\n        document.removeEventListener(\"click\", handleClick);\n    });\n    document.addEventListener(\"contextmenu\", function handleClick(e) {\n        e.preventDefault();\n        resolve(\"Second promise was resolved\");\n        document.removeEventListener(\"contextmenu\", handleClick);\n    });\n});\nsecondPromise.then(function(message) {\n    createNotification(success, message);\n});\nvar thirdPromise = new Promise(function(resolve) {\n    var countLeftClick = false;\n    var countRightClick = false;\n    document.addEventListener(\"click\", function handleClick() {\n        countLeftClick = true;\n        document.removeEventListener(\"click\", handleClick);\n        if (countLeftClick && countRightClick) resolve(\"Third promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function handleClick(e) {\n        e.preventDefault();\n        countRightClick = true;\n        document.removeEventListener(\"click\", handleClick);\n        if (countLeftClick && countRightClick) resolve(\"Third promise was resolved\");\n    });\n});\nthirdPromise.then(function(message) {\n    createNotification(success, message);\n});\n\n//# sourceMappingURL=index.99974d6e.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\n\nconst success = 'success';\nconst error = 'error';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', function handleClick() {\n    resolve('First promise was resolved');\n    document.removeEventListener('click', handleClick);\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nfirstPromise\n  .then((message) => {\n    createNotification(success, message);\n  })\n  .catch((errorMsg) => {\n    createNotification(error, errorMsg);\n  });\n\nfunction createNotification(type, message) {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.classList.add(type);\n  notification.innerText = message;\n  body.appendChild(notification);\n}\n\nconst secondPromise = new Promise((resolve) => {\n  document.addEventListener('click', function handleClick() {\n    resolve('Second promise was resolved');\n    document.removeEventListener('click', handleClick);\n  });\n\n  document.addEventListener('contextmenu', function handleClick(e) {\n    e.preventDefault();\n    resolve('Second promise was resolved');\n    document.removeEventListener('contextmenu', handleClick);\n  });\n});\n\nsecondPromise.then((message) => {\n  createNotification(success, message);\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let countLeftClick = false;\n  let countRightClick = false;\n\n  document.addEventListener('click', function handleClick() {\n    countLeftClick = true;\n    document.removeEventListener('click', handleClick);\n\n    if (countLeftClick && countRightClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n\n  document.addEventListener('contextmenu', function handleClick(e) {\n    e.preventDefault();\n    countRightClick = true;\n    document.removeEventListener('click', handleClick);\n\n    if (countLeftClick && countRightClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nthirdPromise.then((message) => {\n  createNotification(success, message);\n});\n"],"names":["body","document","querySelector","success","createNotification","type","message","notification","createElement","setAttribute","classList","add","innerText","appendChild","firstPromise","Promise","resolve","reject","addEventListener","handleClick","removeEventListener","setTimeout","Error","then","catch","errorMsg","secondPromise","e","preventDefault","thirdPromise","countLeftClick","countRightClick"],"version":3,"file":"index.99974d6e.js.map"}